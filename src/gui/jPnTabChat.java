/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import commoms.enums.*;
import commoms.request.GroupMessageRequest;
import commoms.request.Request;
import commoms.response.CloseServerResponse;
import commoms.response.MessageResponse;
import commoms.response.UserOnlineResponse;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.net.Socket;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import org.apache.commons.lang3.ObjectUtils;

/**
 *
 * @author Xuyen
 */
public class jPnTabChat extends javax.swing.JPanel implements Runnable {

    @Override
    public void run() {
        switch (choice) {
            case SETUP:
                ResponseProcess res = new ResponseProcess();
                res.start();
                break;
            case CHAT_ALL: {
                try {
                    sendRequest(GroupMessageRequest.builder()
                            .action(Action.CHAT_ALL)
                            .message(content)
                            .uids(this.idString)
                            .build());
                } catch (IOException ex) {
                    Logger.getLogger(jPnTabChat.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            break;

            default:
                break;
        }
    }

    private void sendRequest(Request req) throws IOException {
        this.out.writeObject(req);
        this.out.flush();
    }

    /**
     * Creates new form jPnTabChat
     */
    public jPnTabChat(Socket clientSocket, ObjectOutputStream outputStream, ObjectInputStream input, List<String> idString, List<String> name) throws IOException {
        initComponents();
        this.clientSocket = clientSocket;
        this.idString = idString;
        this.userString=name;
        if (name.size() == 1) {
            for (String s : name) {
                jLbName.setText(s);
            }
        } else {
            String nameSender = "";
            for (String s : name) {
                nameSender += s;
                nameSender += ",";
            }
            nameSender = nameSender.substring(0, nameSender.length() - 1);
            jLbName.setText(nameSender);
        }
        this.out = outputStream;
        this.in = input;
        choice = Action.SETUP;
        
//        Thread t = new Thread(this);
//        t.start();
    }
    private Socket clientSocket;
    private ObjectInputStream in;
    private ObjectOutputStream out;
    private List<String> idString;
    private List<String> userString;

    private Action choice = Action.SETUP;
    private String content;

    private class ResponseProcess extends Thread {

        @Override
        public void run() {
            try {
                while (true) {
                    Object object = in.readObject();
                    if (ObjectUtils.isEmpty(object)) {
                        continue;
                    }
                    if (object instanceof MessageResponse) {
                        MessageResponse messageResponse = (MessageResponse) object;
                        int vt=idString.indexOf(messageResponse.getSenderId());
                        String nameString=userString.get(vt);
                        System.out.println("You is received: from " + nameString);
                        System.out.println("Message " + messageResponse.getMessage());
                    }

                }
            } catch (IOException e) {
                e.printStackTrace();
            } catch (ClassNotFoundException e) {
                e.printStackTrace();
            } finally {
                try {
                    if (in != null) {
                        in.close();
                    }
                    if (out != null) {
                        out.close();
                    }
                    if (clientSocket != null) {
                        clientSocket.close();
                    }
                    return;
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTAchat = new javax.swing.JTextArea();
        sendMessage = new javax.swing.JLabel();
        attach = new javax.swing.JLabel();
        emoji = new javax.swing.JLabel();
        voiceChat = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLbName = new javax.swing.JLabel();
        cameraCall = new javax.swing.JLabel();
        jPnChat = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTAContentChat = new javax.swing.JTextArea();

        jTAchat.setColumns(20);
        jTAchat.setRows(5);
        jTAchat.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTAchatKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTAchatKeyReleased(evt);
            }
        });
        jScrollPane2.setViewportView(jTAchat);

        sendMessage.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gui/images/send.png"))); // NOI18N
        sendMessage.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                sendMessageMouseClicked(evt);
            }
        });

        attach.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        attach.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gui/images/attachment.png"))); // NOI18N

        emoji.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        emoji.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        emoji.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gui/images/happy.png"))); // NOI18N

        voiceChat.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        voiceChat.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gui/images/microphone.png"))); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(attach, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(emoji, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(voiceChat)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 285, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(sendMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(sendMessage, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(voiceChat, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(attach, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
                    .addComponent(emoji, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jLbName.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLbName.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLbName.setText("jLabel6");

        cameraCall.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        cameraCall.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gui/images/video.png"))); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jLbName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cameraCall, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLbName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(cameraCall, javax.swing.GroupLayout.DEFAULT_SIZE, 41, Short.MAX_VALUE)
        );

        jTAContentChat.setColumns(20);
        jTAContentChat.setRows(5);
        jScrollPane1.setViewportView(jTAContentChat);

        javax.swing.GroupLayout jPnChatLayout = new javax.swing.GroupLayout(jPnChat);
        jPnChat.setLayout(jPnChatLayout);
        jPnChatLayout.setHorizontalGroup(
            jPnChatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
        );
        jPnChatLayout.setVerticalGroup(
            jPnChatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPnChatLayout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 299, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 32, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPnChat, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPnChat, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jTAchatKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTAchatKeyReleased
        // TODO add your handling code here:
        if (evt.getKeyCode() == evt.VK_ENTER && evt.getKeyCode() == evt.VK_ALT) {
            sendMessage();
        }
    }//GEN-LAST:event_jTAchatKeyReleased

    private void jTAchatKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTAchatKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTAchatKeyPressed

    private void sendMessageMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sendMessageMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_sendMessageMouseClicked
    public void sendMessage() {
        content = jTAchat.getText();
        if (content.length() == 0) {
            JOptionPane.showMessageDialog(null, "The message is empty!");
            return;
        }
        choice = Action.CHAT_ALL;
        Thread t = new Thread(this);
        t.start();

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel attach;
    private javax.swing.JLabel cameraCall;
    private javax.swing.JLabel emoji;
    private javax.swing.JLabel jLbName;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPnChat;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTAContentChat;
    private javax.swing.JTextArea jTAchat;
    private javax.swing.JLabel sendMessage;
    private javax.swing.JLabel voiceChat;
    // End of variables declaration//GEN-END:variables
}
